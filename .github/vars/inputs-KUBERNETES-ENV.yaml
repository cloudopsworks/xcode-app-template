# This file contains the environment variables for the Kubernetes deployment
environment: "dev|uat|prod|demo"
runner_set: "RUNNER-ENV"
#disable_deploy: true
container_registry: REGISTRY
cluster_name: CLUSTER_NAME
namespace: NAMESPACE
config_map:
  enabled:  false
  files_path: values/configmaps
  mount_point: /app/configmap
#helm_repo_url: oci://HELM_REPO_URL|https://HELM_REPO_URL
#helm_chart_name: CHART_NAME
#helm_chart_path: CHART_PATH
helm_values_overrides:
  'image.repository': REGISTRY/REPOSITORY
#
# Docker Arguments that will be passed to Docker Build Process
#docker_args: |
#  ARG1=value1
#  ARG2=value2
#  ARG3=value3

# The following are for cloud specific configurations
# These will be used to filter the secrets from the secret manager
# and created as secrets in the Kubernetes cluster, then inyected as environment variables
# For Azure:
#azure:
#  resource_group: RESOURCE_GROUP # Optional: set this if the build and deploy resource groups are the same
#  build_resource_group: RESOURCE_GROUP # Optional: set this if the build and deploy resource groups are different
#  deploy_resource_group: RESOURCE_GROUP # Optional: set this if the build and deploy resource groups are different
#  keyvayult_name: KEYVAULT_NAME
#  keyvault_secret_filter: KEYVAULT_SECRET_FILTER
#  pod_identity:
#    enabled: true
#    identity_name: IDENTITY_NAME
#
# For AWS
#aws:
#  region: AWS_REGION
#  sts_role_arn: "BUILD_AWS_STS_ROLE_ARN" # Optional: set this if the build and deploy roles are same
#  build_sts_role_arn: "BUILD_AWS_STS_ROLE_ARN" # Optional: set this if the build and deploy roles are different
#  deploy_sts_role_arn: "DEPLOY AWS_STS_ROLE_ARN" # Optional: set this if the build and deploy roles are different
#  secrets_path_filter: /secrets
#  pod_identity:
#    enabled: true
#    iam_role_name: ROLE_NAME
#
# For GCP
#gcp:
#  secrets_path_filter: /secrets
#  pod_identity:
#    enabled: true
#    service_account_name: SERVICE_ACCOUNT_NAME

