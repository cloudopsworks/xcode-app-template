##
# (c) 2021-2025
#     Cloud Ops Works LLC - https://cloudops.works/
#     Find us on:
#       GitHub: https://github.com/cloudopsworks
#       WebSite: https://cloudops.works
#     Distributed Under Apache v2.0 License
#
name: Build Pull Request
run-name: 'Build Pull Request - Branch: ${{ github.ref_name }}'
on:
  pull_request:
    types:
      - opened
      - synchronize
      - edited
    branches:
      - hotfix/**
      - feature/**
      - master
      - release/**
      - support/**
      - develop

concurrency: build-pull-${{ github.repository }}-${{ github.ref }}

permissions:
  actions: write
  contents: write
  packages: write
  statuses: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  check-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5.9
        with:
          source_ref: ${{ github.head_ref }}
          blueprint_ref: 'v5.9'

      - name: Pipeline Configuration
        id: config
        uses: ./bp/ci/config

      - name: Check Pull Requests
        uses: ./bp/cd/tasks/repo/checkpr
        with:
          token: ${{ secrets.BOT_TOKEN }}

  preload:
    name: 'Preload - Branch: ${{ github.ref_name }}'
    runs-on: ubuntu-latest
    if: |
      (! startsWith(github.head_ref, 'release/')) &&
      (! startsWith(github.head_ref,'support/')) &&
      (! startsWith(github.head_ref,'master'))
    outputs:
      is_release: ${{ steps.config.outputs.is_release }}
      is_pre_release: ${{ steps.config.outputs.is_pre_release }}
      semver: ${{ steps.build.outputs.semver }}
      deployment_name: ${{ steps.config.outputs.deployment_name }}
      target_cloud: ${{ steps.config.outputs.target_cloud }}
      deployment_enabled: ${{ steps.config.outputs.deployment_enabled }}
      cloud: ${{ steps.config.outputs.cloud }}
      cloud_type: ${{ steps.config.outputs.cloud_type }}
      runner_set: ${{ steps.config.outputs.runner_set != '' && steps.config.outputs.runner_set || vars.PREVIEW_RUNNER_SET }}
      project_key: ${{ steps.config.outputs.project_key }}
      project_owner: ${{ steps.config.outputs.project_owner }}
      environment: ${{ steps.config.outputs.environment }}
      xcode_schemes: ${{ steps.xconfig.outputs.xcode_schemes }}
      xcode_sdks: ${{ steps.xconfig.outputs.xcode_sdks }}
      xcode_destinations: ${{ steps.xconfig.outputs.xcode_destinations }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5.9
        with:
          source_ref: ${{ github.head_ref }}
          blueprint_ref: 'v5.9'

      - name: Pipeline Configuration
        id: config
        uses: ./bp/ci/config

      - name: XCode Configuration
        id: xconfig
        uses: ./bp/ci/xcode/config
        with:
          environment: ${{ steps.config.outputs.environment }}

  code-build:
    name: 'Xcode Build - Branch: ${{ github.ref_name }}'
    needs:
      - preload
    strategy:
      matrix:
        xcode_scheme: ${{ fromJSON(needs.preload.outputs.xcode_schemes) }}
        xcode_sdk: ${{ fromJSON(needs.preload.outputs.xcode_sdks) }}
        xcode_destination: ${{ fromJSON(needs.preload.outputs.xcode_destinations) }}
    runs-on: ${{ needs.preload.outputs.runner_set }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5.9
        with:
          source_ref: ${{ github.head_ref }}
          blueprint_ref: 'v5.9'

      - name: XCode Configuration
        id: xconfig
        uses: ./bp/ci/xcode/config
        with:
          environment: ${{ needs.preload.outputs.environment }}

      - name: Build XCode Project
        id: build
        uses: ./bp/ci/xcode/build
        with:
          bot_user: ${{ vars.BOT_USER }}
          token: ${{ secrets.BOT_TOKEN }}
          project_key: ${{ needs.preload.outputs.project_key }}
          xcode_version: ${{ steps.xconfig.outputs.xcode_version }}
          xcode_scheme: ${{ matrix.xcode_scheme }}
          xcode_sdk: ${{ matrix.xcode_sdk }}
          xcode_destination: ${{ matrix.xcode_destination }}
          xcode_extra_args: ${{ steps.xconfig.outputs.xcode_extra_args }}
          xcode_configuration: ${{ steps.xconfig.outputs.xcode_configuration }}
          xcode_dev_team: ${{ steps.xconfig.outputs.xcode_dev_team }}
          xcode_product_bundle: ${{ steps.xconfig.outputs.xcode_product_bundle }}
          build_certificate_b64: ${{ secrets.XCODE_BUILD_CERTIFICATE_BASE64 }}
          build_certificate_pass: ${{ secrets.XCODE_BUILD_CERTIFICATE_PASS }}
          build_provision_profile_b64: ${{ secrets.XCODE_PROVISION_PROFILE_BASE64 }}
          keychain_password: ${{ secrets.XCODE_KEYCHAIN_PASSWORD }}
          build_export_options_plist: ${{ secrets.XCODE_EXPORT_OPTIONS_PLIST }}

      - name: Save Build Artifacts
        uses: ./bp/ci/xcode/artifacts

  scan:
    name: 'Code Scan SAST/SCA/DAST'
    needs:
      - preload
      - code-build
    uses: ./.github/workflows/scan.yml
    with:
      deployment_name: ${{ needs.preload.outputs.deployment_name }}
      semver: ${{ needs.preload.outputs.semver }}
      bot_user: ${{ vars.BOT_USER }}
      sonarqube_url: ${{ vars.SONARQUBE_URL }}
      dtrack_url: ${{ vars.DEPENDENCYTRACK_URL }}
      default_runner_set: ${{ vars.DEPLOYMENT_RUNNER_SET }}
      environment: ${{ needs.preload.outputs.environment }}
      is_preview: true
    secrets:
      token: ${{ secrets.BOT_TOKEN }}
      sonarqube_token: ${{ secrets.SONARQUBE_TOKEN }}
      snyk_token: ${{ secrets.SNYK_TOKEN }}
      semgrep_token: ${{ secrets.SEMGREP_TOKEN }}
      dtrack_token: ${{ secrets.DEPENDENCYTRACK_TOKEN }}
