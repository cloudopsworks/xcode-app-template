##
# (c) 2024 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Environment IAC Destruction Process
on:
  # Runs only on demand
  workflow_dispatch:
    inputs:
      destroyedDeploymentName:
        type: environment
        description: Select Environment to destroy
        required: true
      environment:
        type: choice
        description: Environment to destroy
        required: true
        options:
          - dev
          - uat
          - prod
      target:
        type: choice
        description: What to Unlock?
        required: true
        default: app
        options:
          - app
      qualifier:
        type: string
        description: Qualifier for the lock (green/bluee)
        required: false
        default: ''

concurrency: destroy-${{ github.repository }}-${{ inputs.destroyedDeploymentName }}

# Permission Settings for the entire RUN
permissions:
  actions: write
  contents: write
  issues: write
  packages: write
  statuses: write

jobs:
  preload:
    name: Preload Configuration
    runs-on: ubuntu-latest
    outputs:
      runner_set: ${{ steps.config.outputs.runner_set }}
      cloud: ${{ steps.config.outputs.cloud }}
      cloud_type: ${{ steps.config.outputs.cloud_type }}
      aws_region: ${{ steps.config.outputs.aws_region }}
      deploy_aws_sts_role_arn: ${{ steps.config.outputs.deploy_aws_sts_role_arn }}
      release_name: ${{ steps.config.outputs.release_name }}
      project_key: ${{ steps.config.outputs.project_key }}
      azure_rg: ${{ steps.config.outputs.azure_rg }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5
        with:
          blueprint_ref: 'v5'

      - name: Pipeline Configuration
        id: config
        uses: ./bp/ci/config

  destroy-environment:
    needs:
      - preload
    name: 'Destroy Environment - Branch: ${{ github.ref_name }} - Env: ${{ inputs.destroyedDeploymentName }}'
    runs-on: ${{ needs.preload.outputs.runner_set }}
    environment: ${{ inputs.destroyedDeploymentName }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5
        with:
          blueprint_ref: 'v5'

      - name: Install runner tools
        uses: ./bp/ci/common/install/runner-tools

      - name: Destroy Application Deploy AWS
        if: ${{ needs.preload.outputs.cloud == 'AWS' && (inputs.target == 'app' || inputs.target == 'BOTH') }}
        uses: ./bp/cd/deploy/app/aws
        with:
          destroy: true
          qualifier: ${{ inputs.qualifier }}
          cloud_type: ${{ needs.preload.outputs.cloud_type }}
          token: ${{ secrets.BOT_TOKEN }}
          aws_region: ${{ needs.preload.outputs.aws_region != '' && needs.preload.outputs.aws_region || vars.DEPLOYMENT_AWS_REGION }}
          aws_sts_role_arn: ${{ needs.preload.outputs.deploy_aws_sts_role_arn != '' && needs.preload.outputs.deploy_aws_sts_role_arn || vars.DEPLOYMENT_AWS_STS_ROLE_ARN }}
          aws_access_key_id: ${{ secrets.DEPLOYMENT_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.DEPLOYMENT_AWS_SECRET_ACCESS_KEY }}
          terraform_state_conf: ${{ vars.DEPLOYMENT_STATE_CONF }}
          release_name: ${{ needs.preload.outputs.release_name }}
          release_version: 'v1'
          project_key: ${{ needs.preload.outputs.project_key }}
          deployment_name: ${{ inputs.destroyedDeploymentName }}
          environment: ${{ inputs.environment }}

      - name: Destroy Application Deploy Azure
        if: ${{ needs.preload.outputs.cloud == 'AZURE' && (inputs.target == 'app' || inputs.target == 'BOTH') }}
        uses: ./bp/cd/deploy/app/azure
        with:
          destroy: true
          qualifier: ${{ inputs.qualifier }}
          cloud_type: ${{ needs.preload.outputs.cloud_type }}
          token: ${{ secrets.BOT_TOKEN }}
          azure_service_id: ${{ secrets.DEPLOYMENT_AZURE_SERVICE_ID }}
          azure_service_secret: ${{ secrets.DEPLOYMENT_AZURE_SERVICE_SECRET }}
          azure_rg: ${{ needs.preload.outputs.azure_rg != '' && needs.preload.outputs.azure_rg || vars.DEPLOYMENT_AZURE_RG }}
          terraform_state_conf: ${{ vars.DEPLOYMENT_STATE_CONF }}
          release_name: ${{ needs.preload.outputs.release_name }}
          release_version: ${{ inputs.semver }}
          project_key: ${{ needs.preload.outputs.project_key }}
          deployment_name: ${{ inputs.destroyedDeploymentName }}
          environment: ${{ inputs.environment }}

#      - name: Destroy GCP
#        if: ${{ needs.preload.outputs.cloud == 'GCP' }}
#        uses: ./bp/cd/deploy/app/azure
#        with:
#          destroy: true
#          qualifier: 'green'
#          cloud_type: ${{ needs.preload.outputs.cloud_type }}
#          token: ${{ secrets.BOT_TOKEN }}
#          gcp_service_id: ${{ secrets.GCP_SERVICE_ID }}
#          terraform_state_conf: ${{ vars.DEPLOYMENT_STATE_CONF }}
#          release_name: ${{ needs.preload.outputs.release_name }}
#          release_version: ${{ inputs.semver }}
#          project_key: ${{ needs.preload.outputs.project_key }}
#          deployment_name: ${{ inputs.destroyedDeploymentName }}
#          environment: ${{ needs.preload.outputs.environment }}
